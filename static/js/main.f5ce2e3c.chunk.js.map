{"version":3,"sources":["features/hisaab/hisaab.module.css","features/hisaab/api/hisaabAPI.js","features/hisaab/hisaabSlice.js","features/hisaab/hisaab.js","features/helpers/screenSize.js","features/hisaab/subcomponents/navbar.js","features/hisaab/subcomponents/colors.js","features/hisaab/subcomponents/edit-member.js","features/hisaab/subcomponents/member.js","features/hisaab/pages/add-member.js","features/hisaab/pages/transactions.js","features/hisaab/pages/add-transaction.js","features/hisaab/pages/calculations.js","features/hisaab/subcomponents/toaster.js","features/hisaab/layout.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["module","exports","model","members","transactions","toaster","show","header","text","fetchCount","amount","Promise","resolve","setTimeout","data","initialState","serializedState","localStorage","getItem","JSON","parse","err","loadState","ls","hisaab","preloadedState","incrementAsync","createAsyncThunk","a","response","hisaabSlice","createSlice","name","reducers","addMember","state","action","indx","length","payload","id","push","updateMember","findIndex","m","removeMember","delIndex","inactive","addTransaction","deleteGroup","filter","ele","groupId","setToaster","extraReducers","builder","addCase","pending","status","fulfilled","value","actions","selectCount","Hisaab","useSelector","useDispatch","IsMobile","useState","screenSize","setScreenSize","useLayoutEffect","updateScreenSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useMediaQuery","NavBar","isMobile","location","useLocation","pathname","split","pop","Container","fluid","Nav","justify","variant","className","style","navbarStyle","defaultActiveKey","Item","Link","as","to","eventKey","size","getColor","num","pattern","colors","random","Math","floor","EditMember","props","dispatch","member","setMember","setName","organisation","org","setOrg","email","setEmail","mobile","setMobile","useEffect","Modal","fullscreen","onHide","hide","animation","Header","closeButton","closeVariant","Title","Body","Form","onSubmit","e","preventDefault","updatedMember","Row","Col","Group","controlId","Label","visuallyHidden","InputGroup","Text","Control","type","placeholder","onChange","target","Button","onClick","console","log","React","memo","Card","height","Footer","onClickCapture","handleModal","editButton","AddMember","transaction","invalid","setInValid","modal","setModal","showModal","find","currentTarget","dataset","memberid","noValidate","onSubmitCapture","required","toLowerCase","isInvalid","Feedback","xs","md","map","includes","Transactions","reverse","ListGroup","t","styles","transactionItems","spentBy","desc","date","Date","datetime","toDateString","AddTransaction","setAmount","expenseTypes","expType","setExpType","expDesc","setExpDesc","checkedMembers","among","owner","setOwner","handleCheckedMembers","isChecked","checked","isNaN","now","createTransaction","reset","option","FloatingLabel","label","Select","selectedIndex","Check","inline","textAlign","margin","Calculations","Toaster","Toast","bg","onClose","delay","zIndex","position","top","left","autohide","HisaabLayout","children","useRouteMatch","path","url","marginBottom","exact","component","calculations","HisaabLayoutRoute","Component","rest","render","matchProps","App","store","configureStore","reducer","hisaabReducer","subscribe","getState","saveState","stringify","setItem","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f5ce2e3c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbarStyle\":\"hisaab_navbarStyle__klqje\",\"transactionItems\":\"hisaab_transactionItems__3op0P\",\"amount\":\"hisaab_amount__2OASX\",\"date\":\"hisaab_date__1q4OG\"};","import { useSelector, useDispatch } from 'react-redux';\nimport {\n  addMember\n} from '../hisaabSlice';\n\nconst model = \n{\n  members:[],\n  transactions:[],\n  toaster:{show:false,header:'',text:''}\n}\n\nexport function FetchMembers(groupId) {\n  return useSelector(s=>s.members?.filter(m=>m.groupId==groupId))\n}\nexport function AddMemberToGroup(member) {\n  return useDispatch(addMember(member))\n}\nexport function fetchCount(amount = 1) {\n  return new Promise((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n\nexport function GetMembers(groupId) {\n  return \n}\n\nexport const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem('state');\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n};\n\nexport const preloadedState =()=>loadState()?.ls?.hisaab || model;","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchCount,preloadedState } from './api/hisaabAPI';\n\nconst initialState = preloadedState();\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n  'counter/fetchCount',\n  async (amount) => {\n    const response = await fetchCount(amount);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const hisaabSlice = createSlice({\n  name: 'hisaab',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    addMember: (state,action) => {\n      let indx = state.members.length;\n      action.payload.id=indx+1;\n      state.members.push(action.payload);\n    },\n    updateMember: (state,action) => {\n      let indx=state.members.findIndex(m=>m.id==action.payload.id);\n      state.members[indx]=action.payload;\n    },\n    removeMember: (state,action) => {\n     var delIndex=state.members.findIndex(m=>m.id==action.payload.id);\n     state.members[delIndex].inactive=1;\n    },\n    addTransaction: (state, action) => {\n      let indx = state.transactions.length;\n      action.payload.id=indx+1;\n      state.transactions.push(action.payload);\n    },\n    deleteGroup: (state, action) => {\n      state.transactions= state.transactions.filter(function(ele){ \n        return ele.groupId != action.payload; \n    });\n    },\n\n    setToaster:(state,action) =>\n    {\n      state.toaster=action.payload;\n    }\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const { addMember, removeMember, addTransaction,deleteGroup,updateMember,setToaster } = hisaabSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state) => state?.hisaab?.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd = (amount) => (dispatch, getState) => {\n  // const currentValue = selectCount(getState());\n  // if (currentValue % 2 === 1) {\n  //   dispatch(incrementByAmount(amount));\n  // }\n};\n\nexport default hisaabSlice.reducer;\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  decrement,\n  increment,\n  incrementByAmount,\n  incrementAsync,\n  incrementIfOdd,\n  selectCount,\n} from './hisaabSlice';\nimport styles from './hisaab.module.css';\n\nexport function Hisaab() {\n  const count = useSelector(selectCount);\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      \n      <h1>dsandkns</h1>\n\n\n      {/* <div className={styles.row}>\n        <button\n          className={styles.button}\n          aria-label=\"Decrement value\"\n          onClick={() => dispatch(decrement())}\n        >\n          -\n        </button>\n        <span className={styles.value}>{count}</span>\n        <button\n          className={styles.button}\n          aria-label=\"Increment value\"\n          onClick={() => dispatch(increment())}\n        >\n          +\n        </button>\n      </div>\n      <div className={styles.row}>\n        <input\n          className={styles.textbox}\n          aria-label=\"Set increment amount\"\n          value={incrementAmount}\n          onChange={(e) => setIncrementAmount(e.target.value)}\n        />\n        <button\n          className={styles.button}\n          onClick={() => dispatch(incrementByAmount(incrementValue))}\n        >\n          Add Amount\n        </button>\n        <button\n          className={styles.asyncButton}\n          onClick={() => dispatch(incrementAsync(incrementValue))}\n        >\n          Add Async\n        </button>\n        <button\n          className={styles.button}\n          onClick={() => dispatch(incrementIfOdd(incrementValue))}\n        >\n          Add If Odd\n        </button>\n      </div> */}\n    </div>\n  );\n}\n","import { useLayoutEffect, useState } from \"react\";\r\n\r\nexport default function useMediaQuery() {\r\n  const [screenSize, setScreenSize] = useState([0, 0]);\r\n  \r\n  useLayoutEffect(() => {\r\n    function updateScreenSize() {\r\n      setScreenSize([window.innerWidth, window.innerHeight]);\r\n    }\r\n    window.addEventListener(\"resize\", updateScreenSize);\r\n    updateScreenSize();\r\n    return () => window.removeEventListener(\"resize\", updateScreenSize);\r\n  }, []);\r\n  return screenSize;\r\n}\r\n\r\nexport function IsMobile()\r\n{\r\n    const [width] = useMediaQuery();\r\n    return width < 481 ?true:false\r\n}\r\n","import { Container, Nav } from \"react-bootstrap\";\r\nimport { PersonPlus, ArrowLeftRight, Calculator, Funnel } from 'react-bootstrap-icons';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport {IsMobile} from '../../helpers/screenSize'\r\nimport style from './../hisaab.module.css'\r\nexport default function NavBar() {\r\n    const isMobile = IsMobile();\r\n    let location = useLocation().pathname.split(\"/\").pop();\r\n    return (\r\n        <Container fluid >\r\n            <Nav justify variant=\"pills\" className={isMobile ? style.navbarStyle: \"top\"} defaultActiveKey={location||\"members\"}>\r\n                <Nav.Item>\r\n                    <Nav.Link as={Link} to={`/members`} eventKey=\"members\"><PersonPlus size={25}></PersonPlus></Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                    <Nav.Link as={Link} to={`/add-transaction`} eventKey=\"add-transaction\"><Funnel size={25}></Funnel></Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                    <Nav.Link as={Link} to={`/transactions`} eventKey=\"transactions\"><ArrowLeftRight size={25}></ArrowLeftRight></Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                    <Nav.Link as={Link} to={`/calculations`} eventKey=\"calculations\" ><Calculator size={25}></Calculator>\r\n                    </Nav.Link>\r\n                </Nav.Item>\r\n            </Nav>\r\n            \r\n        </Container>\r\n    )\r\n}","export function getColor(num,pattern='fixed')\r\n{\r\n    const colors = ['primary',\r\n        'success',\r\n        'danger',\r\n        'warning',\r\n        'info'];\r\n\r\n    const random = Math.floor(pattern=='fixed'?(num % colors.length):(Math.random() % colors.length));\r\n    let variant = 'bg-' + colors[random];\r\n    return variant;\r\n}","import { Modal, Form, Button, Row, Col, InputGroup } from \"react-bootstrap\";\r\nimport { useEffect, useState } from \"react\";\r\nimport {\r\n    updateMember, setToaster, removeMember\r\n} from './../hisaabSlice';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getColor } from './colors';\r\nimport { Person, Envelope, Telephone, Building, TypeItalic } from \"react-bootstrap-icons\";\r\nimport WarningButton from \"./warning-button\";\r\n\r\nexport default function EditMember(props) {\r\n    const dispatch = useDispatch();\r\n    const [member, setMember] = useState(props.data?.member || {});\r\n    const [name, setName] = useState(props.data.member?.name || '');\r\n    const [org, setOrg] = useState(props.data.member?.organisation || '');\r\n    const [email, setEmail] = useState(props.data.member?.email || '');\r\n    const [mobile, setMobile] = useState(props.data.member?.mobile || '');\r\n    useEffect(() => {\r\n        setName(props.data.member?.name || '');\r\n        setEmail(props.data.member?.email || '');\r\n        setMobile(props.data.member?.mobile || '');\r\n        setMember(props.data.member || {})\r\n        setOrg(props.data.member?.organisation || '')\r\n    }, [props.data.member]);\r\n\r\n    const onDeleteMember = (e) => {\r\n        console.log('trihe')\r\n        dispatch(removeMember({ id: member.id }));\r\n        props.hide();\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const updatedMember = { ...member, name: name, email: email, mobile: mobile, organisation: org };\r\n        dispatch(updateMember(updatedMember))\r\n        dispatch(setToaster({ show: true, text: 'Update Successful!' }));\r\n    }\r\n    let variant = getColor(member.id);\r\n\r\n    return (\r\n        <Modal show={props.data.show} fullscreen={true} onHide={props.hide} animation={false}>\r\n            <Modal.Header className={variant} closeButton closeVariant='white'>\r\n                <Modal.Title className='text-light'>{name}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form onSubmit={handleSubmit}>\r\n\r\n                    <Row>\r\n                        <Col><span className=\"fst-italic\">Personal Information</span></Col>\r\n                    </Row>\r\n                    <br></br>\r\n                    <Row className=\"mb-3\">\r\n                        <Form.Group as={Col} controlId=\"formGridName\">\r\n                            <Form.Label visuallyHidden>Full Name</Form.Label>\r\n                            <InputGroup className=\"mb-2\">\r\n                                <InputGroup.Text className=\"bg-light\"><Person></Person></InputGroup.Text>\r\n                                <Form.Control type=\"text\" placeholder=\"FirstName LastName\" value={name} onChange={(e) => setName(e.target.value)} />\r\n                            </InputGroup>\r\n                        </Form.Group>\r\n                    </Row>\r\n                    <Row className=\"mb-3\">\r\n                        <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                            <Form.Label visuallyHidden>Email</Form.Label>\r\n                            <InputGroup className=\"mb-2\">\r\n                                <InputGroup.Text className=\"bg-light\"><Envelope></Envelope></InputGroup.Text>\r\n                                <Form.Control type=\"email\" placeholder=\"Enter email\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n                            </InputGroup>\r\n                        </Form.Group>\r\n                    </Row>\r\n\r\n                    <Form.Group className=\"mb-3\" controlId=\"formGridContact\">\r\n                        <Form.Label visuallyHidden>Contact Number</Form.Label>\r\n                        <InputGroup className=\"mb-2\">\r\n                            <InputGroup.Text className=\"bg-light\"><Telephone></Telephone></InputGroup.Text>\r\n                            <Form.Control type=\"number\" placeholder=\"Enter Contact Number\" value={mobile} onChange={(e) => setMobile(e.target.value)} />\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\" controlId=\"formGridOrg\">\r\n                        <Form.Label visuallyHidden>Organisation</Form.Label>\r\n                        <InputGroup className=\"mb-2\">\r\n                            <InputGroup.Text className=\"bg-light\"><Building></Building></InputGroup.Text>\r\n                            <Form.Control type=\"text\" placeholder=\"Enter Organisation\" value={org} onChange={(e) => setOrg(e.target.value)} />\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n                    <br></br>\r\n                    <Row className=''>\r\n                        <Col className=\"text-end\">\r\n                            <Button variant=\"primary\" type=\"submit\"  >\r\n                                Update\r\n                            </Button>\r\n                        </Col>\r\n                        <Col className=\"text-start\">\r\n                            <Button variant=\"danger\" className=\"ms-2\"   onClick={onDeleteMember} >\r\n                                Delete\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </Modal.Body>\r\n        </Modal>\r\n    );\r\n}","import { Card, Button } from \"react-bootstrap\";\r\nimport {\r\n    removeMember\r\n} from '../hisaabSlice';\r\nimport { useDispatch } from 'react-redux';\r\nimport React from \"react\";\r\nimport { PencilFill } from \"react-bootstrap-icons\";\r\nimport style from './../hisaab.module.css';\r\nimport { getColor } from './colors';\r\n\r\nexport default React.memo(props => {\r\n    let variant = getColor(props.member.id);\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <Card\r\n            key={props.member.id}\r\n            text='white'\r\n            style={{ height: '100%' }}\r\n            className={`${variant} mb-2`}\r\n        >\r\n            <Card.Body>\r\n                <Card.Title as='h6'>{props.member.name.split(' ')[0]} </Card.Title>\r\n            </Card.Body>\r\n            <Card.Footer className=\"p-1\">\r\n                <PencilFill onClickCapture={props.handleModal} data-memberid={props.member.id} className={style.editButton}></PencilFill>\r\n            </Card.Footer>\r\n        </Card>\r\n    )\r\n})","import { useState, useEffect } from \"react\";\r\nimport { Form, Row, Button, InputGroup, FormControl, Col } from \"react-bootstrap\"\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n    addMember,\r\n} from '../hisaabSlice';\r\nimport EditMember from \"../subcomponents/edit-member\";\r\nimport Member from \"../subcomponents/member\";\r\n\r\nexport default function AddMember(props) {\r\n\r\n    const groupId = props.transaction?.groupId || 1;\r\n    const dispatch = useDispatch();\r\n    const [name, setName] = useState('');\r\n    const [invalid, setInValid] = useState(false);\r\n    const [modal, setModal] = useState({ show: false, member: {} });\r\n    const members = useSelector((state) => state.hisaab.members.filter(m => m.groupId == props.groupId || groupId && m.inactive != 1));\r\n    const AddMember = () => {\r\n        if (name && members.findIndex(m => m.name == name) == -1) {\r\n            dispatch(addMember({ name: name, groupId: props.groupId || groupId }));\r\n            setName('');\r\n        }\r\n    }\r\n\r\n    function handleInput(e) {\r\n        console.log('handling invalid')\r\n        if (members.findIndex(m => m.name.toLowerCase() == e.target.value.toLowerCase()) == -1) {\r\n            setInValid(false);\r\n        }\r\n        else {\r\n            setInValid(true);\r\n        }\r\n        setName(e.target.value);\r\n    }\r\n\r\n\r\n    const hideModal = () => setModal({ show: false });\r\n    const showModal = (e) => {\r\n        setModal({ show: true, member: members.find(m=>m.id==e.currentTarget.dataset.memberid) });\r\n    };\r\n    return (\r\n        <div className=\"mb-5\">\r\n            <Form noValidate onSubmitCapture={(e) => e.preventDefault()}>\r\n                <InputGroup className=\"mb-2\">\r\n                    <Form.Control type=\"text\" placeholder=\"Enter Name of Member\" value={name} required onChange={handleInput} isInvalid={invalid} />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Please choose a different name. Member Already Exists!\r\n                    </Form.Control.Feedback>\r\n                    <Button variant=\"primary\" type=\"submit\" className=\"btn-sm\" onClick={AddMember}>Add\r\n                    </Button>\r\n                </InputGroup>\r\n            </Form>\r\n            <div>\r\n                <br></br>\r\n                <Row xs={3} md={2} className=\"g-4\">\r\n                    {members.map(member => {\r\n                         return member.name.toLowerCase().includes(name.toLowerCase())&&<Col  key={member.id}><Member key={member.id} member={member} handleModal={showModal} ></Member>\r\n                        </Col>\r\n                    })}\r\n                </Row>\r\n            </div>\r\n            <EditMember data={modal} hide={hideModal}></EditMember>\r\n        </div>\r\n    )\r\n}","import { ListGroup } from \"react-bootstrap\"\r\nimport { GeoAltFill } from \"react-bootstrap-icons\";\r\nimport { useSelector } from 'react-redux';\r\nimport styles from './../hisaab.module.css';\r\nimport { getColor } from './../subcomponents/colors';\r\n\r\nexport default function Transactions(props) {\r\n    const groupId = props.groupId || 1;\r\n    const members = useSelector((state) => state.hisaab.members.filter(m => m.groupId == groupId));\r\n    const transactions = useSelector((state) => state.hisaab.transactions.filter(m => m.groupId == groupId).reverse());\r\n    return (\r\n        <div>\r\n            <ListGroup>\r\n                {transactions.map(t =>\r\n                    <ListGroup.Item key={t.id}>\r\n                        <div className={styles.transactionItems} >\r\n                            <span>{members.find(m => m.id == t.spentBy)?.name} paid for {t.type}<br></br><span><GeoAltFill size={10}></GeoAltFill> {t.desc}</span></span><span className={styles.amount}> ₹{t.amount}</span>\r\n                            <span className={styles.date}>{new Date(t.datetime).toDateString()}</span>\r\n                        </div>\r\n                    </ListGroup.Item>)}\r\n            </ListGroup>\r\n        </div>\r\n    )\r\n}","import { useState, useEffect } from \"react\";\r\nimport { Form, Row, Button, FloatingLabel, Col, Card } from \"react-bootstrap\"\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n    addTransaction, setToaster\r\n} from '../hisaabSlice';\r\n\r\n\r\nexport default function AddTransaction(props) {\r\n    const groupId = props.transaction?.groupId || 1;\r\n    const dispatch = useDispatch();\r\n    const [amount, setAmount] = useState(props.transaction?.amount);\r\n    const expenseTypes = [{ type: 'Food', id: '1' }, { type: 'Travel', id: '2' }, { type: 'Entertainment', id: '3' }, { type: 'Other', id: '4' }]\r\n    const [expType, setExpType] = useState(props.transaction?.amount || expenseTypes[0]);\r\n    const [expDesc, setExpDesc] = useState(props.transaction?.desc);\r\n    const checkedMembers = props.transaction?.among || [];\r\n    const members = useSelector((state) => state.hisaab.members.filter(m => m.groupId == groupId && m.inactive != 1));\r\n    const [owner, setOwner] = useState(props.transaction?.among || members[0]?.id);\r\n    const createTransaction = () => {\r\n        let transaction = { groupId: groupId, type: expType.type, datetime: Date.now(), desc: expDesc, amount: amount, among: checkedMembers.filter(m => m.isChecked == true).map(m => { return m.id }), spentBy: owner }\r\n        dispatch(addTransaction(transaction));\r\n        dispatch(setToaster({ show: true, text: 'Transaction Added!' }));\r\n\r\n    }\r\n    const colors = ['light'];\r\n\r\n    const handleExpenseType = (e) => {\r\n        console.log(e.target.selectedIndex);\r\n        setExpType(expenseTypes[e.target.selectedIndex])\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (!isNaN(owner) && checkedMembers.length > 0) {\r\n            createTransaction();\r\n            e.target.reset();\r\n            setAmount();\r\n            setExpDesc();\r\n        }\r\n    }\r\n    const handleExpenseTypeInput = (e) => {\r\n        setExpType({ type: e.target.value, id: 0 })\r\n    }\r\n    const handleCheckedMembers = (e) => {\r\n        var indx = checkedMembers.findIndex(m => m.id == e.target.value);\r\n        if (indx == -1)\r\n            checkedMembers.push({ id: e.target.value, isChecked: e.target.checked })\r\n        else\r\n            checkedMembers[indx].isChecked = e.target.checked;\r\n    }\r\n    return (\r\n        <Form onSubmit={handleSubmit} className='mb-5'>\r\n            {members.length >= 0 ? <div>\r\n                <div className=\"input-group\">\r\n                    <span className=\"input-group-text bg-light\">₹</span>\r\n                    <input type=\"number\" className=\"form-control\" value={amount} onChange={(e) => setAmount(e.target.value)} aria-label=\"Dollar amount (with dot and two decimal places)\" placeholder=\"00.00\" />\r\n                    <span className=\"input-group-text bg-light\">By</span>\r\n                    <select value={owner} onChange={(e) => setOwner(e.target.value)} className=\"form-select\" aria-label=\"Paid By\">\r\n                        {members.map(option => <option key={option.id} value={option.id}>{option.name}</option>)}\r\n                    </select>\r\n                </div>\r\n                <br></br>\r\n                <div className=\"text-center mb-3\">\r\n                    <FloatingLabel controlId=\"floatingSelect\" label=\"For\" size=\"sm\">\r\n                        <Form.Select aria-label=\"Floating label select example\" onChange={handleExpenseType}>\r\n                            {expenseTypes.map(m => <option key={m.id} value={m.id}>{m.type}</option>)}\r\n                        </Form.Select>\r\n                    </FloatingLabel>\r\n                </div>\r\n                <div className=\"input-group mb-3\">\r\n                    <input type=\"text\" className=\"form-control\" value={expType.type} onChange={handleExpenseTypeInput} aria-label=\"Text input with segmented dropdown button\" />\r\n                    <span className=\"input-group-text bg-light\">@</span>\r\n                    <input type=\"text\" className=\"form-control\" value={expDesc} onChange={(e) => setExpDesc(e.target.value)} aria-label=\"Text input with segmented dropdown button\" />\r\n                </div>\r\n                <br></br>\r\n                <legend>Split Between?</legend>\r\n                <br></br>\r\n                <br></br>\r\n                <Row xs={3} md={2} className=\"g-4\">\r\n                    {members.map((member) => (\r\n                        <Col className='mt-1 text-start' key={`inline-${member.id}`}>\r\n                                    <Form.Check\r\n                                        className=\"text-dark\"\r\n                                        key={`inline-${member.id}`}\r\n                                        inline\r\n                                        type='checkbox'\r\n                                        id={member.id}\r\n                                        value={member.id}\r\n                                        label={member.name.split(' ')[0]}\r\n                                        onChange={handleCheckedMembers}\r\n                                        checked={checkedMembers.find(m => m.id == member.id)?.isChecked}\r\n                                    />\r\n                        </Col>\r\n                    ))}\r\n                </Row>\r\n                <div className=\"mb-3\">\r\n\r\n                </div>\r\n                <br></br>\r\n                {<div style={{ textAlign: 'center', margin: '10' }}>\r\n                    <button type=\"submit\" className=\"btn btn-primary btn-sm\" >Add Expense</button>\r\n                </div>}\r\n            </div> :\r\n                <div style={{ textAlign: 'center' }}><span >Try Adding Members First !</span></div>\r\n            }\r\n            <br></br><br></br>\r\n        </Form>\r\n    )\r\n}","import { Button } from \"react-bootstrap\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n    deleteGroup\r\n} from '../hisaabSlice';\r\nexport default function Calculations(props)\r\n{\r\n    const dispatch = useDispatch();\r\n    const groupId = props.transaction?.groupId || 1;\r\n\r\n    return(\r\n        <div>\r\n            calculations<br></br><br></br>\r\n           <div><Button variant=\"danger\" onClick={()=>dispatch(deleteGroup(groupId))} > Reset</Button></div> \r\n            </div>\r\n    )\r\n}","import { useState } from \"react\";\r\nimport { Toast } from \"react-bootstrap\";\r\nimport {\r\n  setToaster,\r\n} from './../hisaabSlice';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nexport default function Toaster(props) {\r\n  const dispatch = useDispatch();\r\n  const toaster = useSelector(state => state.hisaab.toaster);\r\n  return (\r\n    <Toast bg='success' onClose={() => dispatch(setToaster({show:false}))} show={toaster?.show} delay={1500}\r\n      style={{ zIndex: '10000', position: \"fixed\", top: 10, left: 5 }} autohide>\r\n    {toaster?.header && <Toast.Header closeButton={false}>\r\n        <strong className=\"me-auto\">{toaster?.header}</strong>\r\n      </Toast.Header>}\r\n      <Toast.Body className=\"text-white\">{toaster?.text}</Toast.Body>\r\n    </Toast>\r\n  );\r\n}","import React from 'react';\r\nimport NavBar from './subcomponents/navbar';\r\nimport { Switch, Route, useRouteMatch, Redirect } from 'react-router-dom';\r\nimport addMember from './pages/add-member';\r\nimport transactions from './pages/transactions';\r\nimport addTransaction from './pages/add-transaction';\r\nimport calculations from './pages/calculations';\r\nimport { Container } from 'react-bootstrap';\r\nimport Toaster from './subcomponents/toaster';\r\n\r\n\r\nconst HisaabLayout = ({ children }) => {\r\n  let { path, url } = useRouteMatch();\r\n  url=null;\r\n  return (\r\n    <div>\r\n      <div> </div>\r\n      <NavBar></NavBar>\r\n      <br></br>\r\n      <Container style={{marginBottom:40}}>\r\n        <Switch>\r\n          <Route exact path={path}>\r\n            <Redirect to={'members'}></Redirect>\r\n          </Route>\r\n          <Route path={`/members`} component={addMember}></Route>\r\n          <Route path={`/transactions`} component={transactions}></Route>\r\n          <Route path={`/add-transaction`} component={addTransaction}></Route>\r\n          <Route path={`/calculations`} component={calculations}></Route>\r\n        </Switch>\r\n      </Container>\r\n      <Toaster></Toaster>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst HisaabLayoutRoute = ({ component: Component, ...rest }) => {\r\n  return (\r\n    <Route {...rest} render={matchProps => (\r\n      <HisaabLayout>\r\n        <Component {...matchProps} />\r\n      </HisaabLayout>\r\n    )} />\r\n  )\r\n};\r\n\r\nexport default HisaabLayoutRoute;\r\n\r\n\r\n// import React from \"react\";\r\n// import {\r\n//   BrowserRouter as Router,\r\n//   Switch,\r\n//   Route,\r\n//   Link,\r\n//   useParams,\r\n//   useRouteMatch\r\n// } from \"react-router-dom\";\r\n\r\n// // Since routes are regular React components, they\r\n// // may be rendered anywhere in the app, including in\r\n// // child elements.\r\n// //\r\n// // This helps when it's time to code-split your app\r\n// // into multiple bundles because code-splitting a\r\n// // React Router app is the same as code-splitting\r\n// // any other React app.\r\n\r\n// export default function NestingExample() {\r\n//   return (\r\n//     <Router>\r\n//       <div>\r\n//         <ul>\r\n//           <li>\r\n//             <Link to=\"/\">Home</Link>\r\n//           </li>\r\n//           <li>\r\n//             <Link to=\"/topics\">Topics</Link>\r\n//           </li>\r\n//         </ul>\r\n\r\n//         <hr />\r\n\r\n//         <Switch>\r\n//           <Route exact path=\"/\">\r\n//             <Home />\r\n//           </Route>\r\n//           <Route path=\"/topics\">\r\n//             <Topics />\r\n//           </Route>\r\n//         </Switch>\r\n//       </div>\r\n//     </Router>\r\n//   );\r\n// }\r\n\r\n// function Home() {\r\n//   return (\r\n//     <div>\r\n//       <h2>Home</h2>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// function Topics() {\r\n//   // The `path` lets us build <Route> paths that are\r\n//   // relative to the parent route, while the `url` lets\r\n//   // us build relative links.\r\n//   let { path, url } = useRouteMatch();\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>Topics</h2>\r\n//       <ul>\r\n//         <li>\r\n//           <Link to={`${url}/rendering`}>Rendering with React</Link>\r\n//         </li>\r\n//         <li>\r\n//           <Link to={`${url}/components`}>Components</Link>\r\n//         </li>\r\n//         <li>\r\n//           <Link to={`${url}/props-v-state`}>Props v. State</Link>\r\n//         </li>\r\n//       </ul>\r\n\r\n//       <Switch>\r\n//         <Route exact path={path}>\r\n//           <h3>Please select a topic.</h3>\r\n//         </Route>\r\n//         <Route path={`${path}/:topicId`}>\r\n//           <Topic />\r\n//         </Route>\r\n//       </Switch>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// function Topic() {\r\n//   // The <Route> that rendered this component has a\r\n//   // path of `/topics/:topicId`. The `:topicId` portion\r\n//   // of the URL indicates a placeholder that we can\r\n//   // get from `useParams()`.\r\n//   let { topicId } = useParams();\r\n\r\n//   return (\r\n//     <div>\r\n//       <h3>{topicId}</h3>\r\n//     </div>\r\n//   );\r\n// }\r\n","import React from 'react';\nimport './App.css';\nimport { Hisaab } from './features/hisaab/hisaab';\nimport { BrowserRouter, Switch } from 'react-router-dom';\nimport HisaabLayoutRoute from './features/hisaab/layout';\nimport NavBarTop from './features/hisaab/top-nav';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Switch>\n          <HisaabLayoutRoute path=\"/\" component={Hisaab} />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport hisaabReducer from '../features/hisaab/hisaabSlice';\n\nexport const store = configureStore({\n  reducer: {\n    hisaab: hisaabReducer,\n  }\n});\n\nstore.subscribe(() => {\n  console.log(store.getState());\n  saveState({\n     ls: store.getState()\n   });\n});\n\nexport const saveState = (state) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem('state', serializedState);\n  } catch {\n    // ignore write errors\n  }\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n        <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}